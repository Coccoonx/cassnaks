<resources>

    <!--
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    -->
    <style name="AppBaseTheme" parent="@android:style/Theme">
        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        -->
    </style>

    <!-- Base application theme. -->
    <!--<style firstName="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">-->
    <!--&lt;!&ndash; Customize your theme here. &ndash;&gt;-->
    <!--</style>-->

    <style name="CoazeTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- colorPrimary is used for the default action bar background -->
        <item name="colorPrimary">@color/colorPrimary</item>

        <!-- colorPrimaryDark is used for the status bar -->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>

        <!-- colorAccent is used as the default value for colorControlActivated
             which is used to tint widgets -->
        <item name="colorAccent">@color/colorAccent</item>

        <!-- Background color of the window (activity or dialog) in which our view resides. -->
        <item name="android:windowBackground">@color/CoazeWindowBackground</item>

        <!--Disable animation while switching between activities -->
        <item name="android:windowAnimationStyle">@null</item>

    </style>

    <style name="CustomProgressBar" parent="android:Widget.ProgressBar.Horizontal">
        <item name="android:indeterminateOnly">false</item>
        <item name="android:progressDrawable">@drawable/custom_progress_bar_horizontal</item>
        <item name="android:minHeight">10dp</item>
        <item name="android:maxHeight">5dp</item>
    </style>

    <style name="TextLabel" parent="TextAppearance.AppCompat">
        <!-- Hint color and label color in FALSE state -->
        <item name="android:textColorHint">@color/text_color_grey_dark</item>
        <item name="android:textSize">16sp</item>
        <!-- Label color in TRUE state and bar color FALSE and TRUE State -->
        <item name="colorAccent">@color/colorAccent</item>
        <item name="colorControlNormal">@color/text_color_grey_dark</item>
        <item name="colorControlActivated">@color/colorAccent</item>
    </style>

    <style name="TextLabel2" parent="TextAppearance.AppCompat">
        <!-- Hint color and label color in FALSE state -->
        <item name="android:textColorHint">@color/white</item>
        <item name="android:textSize">16sp</item>
        <!-- Label color in TRUE state and bar color FALSE and TRUE State -->
        <item name="colorAccent">@color/colorAccent</item>
        <item name="colorControlNormal">@color/text_color_grey_dark</item>
        <item name="colorControlActivated">@color/colorAccent</item>
    </style>

    <!-- Styles for the keyboard buttons -->
    <style name="PinButton">
        <!-- Preferably a selector drawable -->
        <item name="android:background">@drawable/background_border_pinview</item>
        <item name="android:textSize">@dimen/text_size</item>
        <item name="android:textStyle">bold|italic</item>
        <!-- Styles for Button text color -->
        <item name="android:textColor">@color/colorAccent</item>
    </style>

    <!-- Styles for errors and prompt text -->
    <style name="PinStatus">
        <!-- This can also be a color selector for pressed and normal states -->
        <item name="android:textColor">@android:color/white</item>
        <item name="android:textStyle">bold|italic</item>
    </style>

    <!-- Styles for Pin Entry holes -->
    <style name="PinEntry">
        <!-- A selector definitely with a normal and selected state -->
        <item name="android:src">@color/colorAccent</item>
    </style>

</resources>
